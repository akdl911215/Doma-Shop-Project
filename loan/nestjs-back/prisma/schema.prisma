// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
    @@map(name: "users")
    id  String @id @default(uuid()) @db.Uuid
    userId  String  @unique
    nickname String @unique
    password  String
    name String @db.Text
    phone  String  @unique
    address String @db.Text
    isMarketing  Boolean  @default(false)
    refreshToken String? @db.Text
    createdAt  DateTime  @default(now())
    updatedAt  DateTime  @updatedAt
    deletedAt  DateTime?
    social SocialType @default(BASIC)
    creditRating Int
    mainBoards MainBoards[]
}

model MainBoards {
    @@map(name: "main_boards")
    id  String @id @default(uuid()) @db.Uuid
    users Users @relation(fields: [authId], references: [id], onDelete: Cascade)
    authId String @db.Uuid
    title String
    description String @db.Text
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    deletedAt DateTime?
}

enum SocialType {
    KAKAO
    NAVER
    BASIC
}

model Loans {
    @@map(name: "loans")
    id  String @id @default(uuid()) @db.Uuid
    debtors Debtors @relation(fields: [debtorId], references: [id])
    debtorId String @db.Uuid
    creditors Creditors @relation(fields: [creditorId], references: [id])
    creditorId String
    totalAmountLoan Int
    loanRepaymentDate DateTime
    interest Int
}

model Debtors {
    @@map(name: "debtors")
    id  String @id @default(uuid()) @db.Uuid
    users Users @relation(fields: [authId], references: [id], onDelete: Cascade)
    authId String @db.Uuid
    creditRating Int
}

model Creditors {
    @@map(name: "creditor")
    id  String @id @default(uuid()) @db.Uuid
    users Users @relation(fields: [authId], references: [id], onDelete: Cascade)
    authId String @db.Uuid
}


